name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add VPS SSH host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 69.62.107.240 >> ~/.ssh/known_hosts

      - name: Set up SSH key for authentication
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy application to VPS
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 69.62.107.240
          username: root
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/root/projects/socially-node-micro-service/socially
            git pull origin main

            # Store GitHub Secrets into .env files for each service
            echo -e "${{ secrets.API_GATEWAY_ENV }}" | tee api-gateway/.env
            echo -e "${{ secrets.IDENTITY_SERVICE_ENV }}" | tee identity-service/.env
            echo -e "${{ secrets.POST_SERVICE_ENV }}" | tee post-service/.env
            echo -e "${{ secrets.MEDIA_SERVICE_ENV }}" | tee media-service/.env
            echo -e "${{ secrets.SEARCH_SERVICE_ENV }}" | tee search-service/.env

            # Verify .env files before running Docker
            echo "üîç Checking .env files..."
            for service in api-gateway identity-service post-service media-service search-service; do
              echo "üìÇ Contents of $service/.env:"
              ls -la $service
              cat $service/.env || echo "‚ùå $service/.env is missing or empty!"
            done

            # Restart services
            echo "üîß Checking Docker Compose configuration..."
            docker-compose config || { echo "‚ùå Invalid docker-compose configuration!"; exit 1; }

            echo "üöÄ Restarting Docker services..."
            docker-compose down
            docker-compose up -d --remove-orphans
